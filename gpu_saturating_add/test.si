
def get_expected(a: S16, b: S16) S16 {
    let avalue = <Int> a
    let bvalue = <Int> b
    var sum = avalue + bvalue

    if sum > 32767 {
        sum = 32767
    }
    if sum < -32768 {
        sum = -32768
    }
    return <S16> sum
}

def get_input($scratch_space: [Int], tick: Int, $inputs: [Int]) {

    var x = tick
    x ^= x << 23
    x ^= x >> 25
    x ^= x << 7
    x ^= x >> 9
    x ^= x << 15
    x ^= x >> 17

    inputs[0] = x & 0xffff
    inputs[1] = (x >> 16) & 0xffff

    let a = <S16> inputs[0]
    let b = <S16> inputs[1]

    ui_set_text("formula", `{a} + {b} = {get_expected(a, b)}`)
}

def check_output($scratch_space: [Int], tick: Int, inputs: [Int], outputs: [Int]) TestResult {
    
    let a = <S16> inputs[0]
    let b = <S16> inputs[1]

    let expected = get_expected(a, b)
    let provided = <S16> outputs[0]

    if provided == expected {
        if tick == 0xffff {
            return win
        }
    } else {
        set_error(`Expected {expected}, but got {provided}`)
        return fail
    }
}
